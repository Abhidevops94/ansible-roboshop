- name: configure user component
  hosts: user
  become: yes
  tasks:
  - name: Disable default nodejs module
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present
  
  - name: create roboshop system user #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/user_module.html
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app

  - name: create app directory #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download the user code #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/get_url_module.html
    ansible.builtin.get_url: 
      url: https://roboshop-artifacts.s3.amazonaws.com/user-v3.zip
      dest: /tmp/user.zip

  # this module thinks files exist on ansible control server, needs to extract on remote machine
  #remote_src: yes means file already exist in user server
  - name: extract user code
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes
  
  - name: install dependencies
    community.general.npm:
      path: /app

  - name: copy user service to system directory #http://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: systemctl daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start and enable user.service  #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html
    ansible.builtin.service:
      name: user
      state: started
      enabled: yes
