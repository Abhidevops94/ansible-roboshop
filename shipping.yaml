- name: configure shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: install package maven and mysql
    ansible.builtin.package:
      name: "{{ item }}"
      state: installed
    loop:
    - maven
    - mysql

  - name: create roboshop system user #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/user_module.html
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app

  - name: create app directory #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download the shipping code #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/get_url_module.html
    ansible.builtin.get_url: 
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip

  # this module thinks files exist on ansible control server, needs to extract on remote machine
  #remote_src: yes means file already exist in shipping server
  - name: extract shipping code
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes 

  - name: install maven dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app
  
  - name: copy shipping service to system directory #http://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: systemctl daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start and enable shipping.service  #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes