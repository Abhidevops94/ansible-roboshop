- name: configure shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: install package maven and mysql
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: installed
    loop:
    - maven
    - mysql
  
  - name: install PyMySQL and cryptography #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/pip_module.html
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - PyMySQL
    - cryptography

  - name: create roboshop system user #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/user_module.html
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app

  - name: create app directory #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download the shipping code #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/get_url_module.html
    ansible.builtin.get_url: 
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip

  # this module thinks files exist on ansible control server, needs to extract on remote machine
  #remote_src: yes means file already exist in shipping server
  - name: extract shipping code
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes 

  - name: install maven dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app
  
  - name: copy shipping service to system directory #http://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: systemctl daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start and enable shipping.service  #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes

  # - name: connect to mysql using app user #https://docs.ansible.com/ansible/latest/collections/community/mysql/mysql_info_module.html#ansible-collections-community-mysql-mysql-info-module
  #   community.mysql.mysql_info:
  #     login_user: shipping
  #     login_password: RoboShop@1
  #     login_host: mysql.abhi84s-daws.site
  #     login_db: cities

  - name: import data #https://docs.ansible.com/ansible/latest/collections/community/mysql/mysql_db_module.html#ansible-collections-community-mysql-mysql-db-module
    community.mysql.mysql_db:
      login_user: root
      login_password: RoboShop@1
      login_host: mysql.abhi84s-daws.site
      state: import
      target: /tmp/dump.sql.gz
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql
    - /app/db/master-data.sql

  - name: restart shipping
    ansible.builtin.service:
      state: restarted
      name: shipping
